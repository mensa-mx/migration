#!/usr/bin/env php
<?php
/**
 * @author Alberto Maturano <alberto@maturano.mx>
 */

require 'bootstrap.php';
require 'src/Member.php';
require 'src/Membership.php';


// Datos de conexión como parámetros del script
$dbParams = [
    'host'     => 'localhost',
    'database' => $argv[1],
    'username' => $argv[2],
    'password' => $argv[3],
];


$sqlMembers = <<<SQL
SELECT
    member_id,
    user_first_name,
    user_last_name,
    -- Normalizando fechas '0000-00-00' a NULL
    NULLIF (user_birthdate, '0000-00-00') AS user_birthdate,
    user_email1,
    user_admission

FROM
    users

WHERE
    user_admission IS NOT NULL

ORDER BY member_id
SQL;

$sqlMemberships = <<<SQL
SELECT
    member_id,
    membership_start,
    membership_end

FROM
    memberships

WHERE
    COALESCE (
        NULLIF (membership_start, '0000-00-00'),
        NULLIF (membership_end,   '0000-00-00')
    ) IS NOT NULL

ORDER BY member_id
SQL;


try {
    $conn = new \PDO(
        "mysql:dbname={$dbParams['database']};host={$dbParams['host']}",
        $dbParams['username'],
        $dbParams['password']
    );

    // Permite ignorar la secuencia y asignar un ID manualmente
    $meta = $em->getClassMetaData('Member');
    $meta->setIdGenerator(new \Doctrine\ORM\Id\AssignedGenerator());

} catch (\PDOException $e) {
    // TODO
    echo 'Connection Failed: ' . $e->getMessage() . PHP_EOL;
    exit(1);
}


$sth = $conn->prepare($sqlMembers);
$sth->execute();
$results = $sth->fetchAll(\PDO::FETCH_ASSOC);

echo 'Miembros a importar: ' . count($results) . PHP_EOL;

foreach ($results as $row) {

    $member = (new Member())
        ->setId($row['member_id'])
        ->setFirstName($row['user_first_name'])
        ->setLastName($row['user_last_name'])
        ->setBirthdate($row['user_birthdate'])
        ->setEmail($row['user_email1'])
        ->setAdmissionType($row['user_admission'])
    ;

    $em->persist($member);
}


$sth = $conn->prepare($sqlMemberships);
$sth->execute();
$results = $sth->fetchAll(\PDO::FETCH_ASSOC);


echo 'Membresías a importar: ' . count($results) . PHP_EOL;

$memberRepository = $em->getRepository('Member');

foreach ($results as $row) {

    $membership = (new Membership())
        ->setMember($memberRepository->find($row['member_id']))
        ->setStart($row['membership_start'])
        ->setEnd($row['membership_end'])
    ;

    $em->persist($membership);
}

$em->flush();

// vim: ft=php
