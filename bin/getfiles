#!/usr/bin/env php
<?php
/**
 * @author Alberto Maturano <alberto@maturano.mx>
 */

require 'cli-config.php';

use Symfony\Component\Finder\Finder;


// Valores pasados por configuración
$clientAddress = $params['gdrive']['client_address'];
$keyFile       = $params['gdrive']['private_key'];
$userAddress   = $params['gdrive']['user_address'];
$storageFolder = $params['gdrive']['storage_folder'];
$oldSystemPath = $params['old_system_path'];


// Determinar el mimetype de un archivo por su contenido
$finfo = new finfo(FILEINFO_MIME_TYPE);

// Buscar archivos del viejo sistema en el filesystem local
$finder = (new Finder())
    ->files()
    ->in($oldSystemPath)
    ->path('public_html/DataBase/FOTOGRAFIAS/')
    ->path('mensa/documents/pictures/')
;

// Folder en GoogleDrive donde se copiarán las imágenes
$gFolder = new \Google_Service_Drive_ParentReference();
$gFolder->setId($storageFolder);

// Gestión de Google Drive
$gCredentials = new \Google_Auth_AssertionCredentials(
    $clientAddress,
    ['https://www.googleapis.com/auth/drive'],
    file_get_contents($keyFile),
    'notasecret',
    'http://oauth.net/grant_type/jwt/1.0/bearer',
    $userAddress
);

$gClient = new \Google_Client();
$gClient->setAssertionCredentials($gCredentials);

if ($gClient->getAuth()->isAccessTokenExpired()) {
    $gClient->getAuth()->refreshTokenWithAssertion($gCredentials);
}

$gDriveService = new \Google_Service_Drive($gClient);


$results = array_map('str_getcsv', file($params['provisional_file']));

$savedFiles = [];
$line = 0;
foreach ($results as $row) {
    $line++;
    if ($line === 1) { continue; } // Header...

    if (empty($row[2])) {
        echo '[ERROR] Falta ID para fila: ' . $line . PHP_EOL;
        continue;
    }

    /** @var Mensa\Clean\Member $member */
    $member = $em->find('Mensa\Clean\Member', $row[2]);


    // 1ro. Búsqueda local por nombre del archivo
    $findFs = clone $finder;
    foreach ($findFs->name($row[2] . '*') as $file) {
        /** @var Symfony\Component\Finder\SplFileInfo $file */
        $fileName = md5($file->getContents()) . '.' . $file->getExtension();
        $mimeType = $finfo->buffer($file->getContents());

        if (in_array($fileName, $savedFiles)) {
            // Procesado previamente...
            continue;
        }

        $newFile = new \Google_Service_Drive_DriveFile();
        $newFile->setParents([$gFolder]);
        $newFile->setTitle($fileName);
        $newFile->setMimeType($mimeType);

        try {
            $gDriveService->files->insert($newFile, [
                'uploadType' => 'media',
                'data'       => $file->getContents(),
                'mimeType'   => $mimeType,
            ]);

            $member->setPicture($fileName);
            echo '[INFO] Imagen para ' . $row[2] . ' via Finder: ' . $fileName . PHP_EOL;
            $savedFiles[] = $fileName;

        } catch (\Exception $e) {
            echo '[ERROR] ' . $e->getMessage() . PHP_EOL;
        }
    }


    if ( ! empty($row[7]) // Columna con dato de la url de la fotografía
      && false !== ($url = parse_url($row[7]))
      && ! empty($url['host'])
    ) {
        // 2do. Ruta explícita decifrada por URL
        if ('69.73.169.50' === $url['host']) {
            $file = $oldSystemPath
                  . str_replace(
                        ['../', 'thumbnails/'],
                        '',
                        base64_decode(
                            pathinfo($url['path'], PATHINFO_BASENAME)
                        ) // O_O
                    );

            if ( ! file_exists($file)) { continue; }

            $content  = file_get_contents($file);
            $fileName = md5($content) . '.' . pathinfo($file, PATHINFO_EXTENSION);
            $mimeType = $finfo->buffer($content);

            if (in_array($fileName, $savedFiles)) {
                // Procesado previamente...
                continue;
            }

            $newFile = new \Google_Service_Drive_DriveFile();
            $newFile->setParents([$gFolder]);
            $newFile->setTitle($fileName);
            $newFile->setMimeType($mimeType);

            try {
                $gDriveService->files->insert($newFile, [
                    'uploadType' => 'media',
                    'data'       => $content,
                    'mimeType'   => $mimeType,
                ]);

                $member->setPicture($fileName);
                echo '[INFO] Imagen para ' . $row[2] . ' via System: ' . $fileName . PHP_EOL;
                $savedFiles[] = $fileName;

            } catch (\Exception $e) {
                echo '[ERROR] ' . $e->getMessage() . PHP_EOL;
            }

        } else if ('drive.google.com' === $url['host']) {
            // 3ro. Copiar de Google Drive
            $idFile   = explode('/', $url['path'])[3];
            $origFile = $gDriveService->files->get($idFile);
            $fileName = $origFile->getMd5Checksum() . '.' . $origFile->getFileExtension();

            if (in_array($fileName, $savedFiles)) {
                // Procesado previamente...
                continue;
            }

            $newFile = new \Google_Service_Drive_DriveFile();
            $newFile->setParents([$gFolder]);
            $newFile->setTitle($fileName);

            try {
                $gDriveService->files->copy($idFile, $newFile);

                $member->setPicture($fileName);
                echo '[INFO] Imagen para ' . $row[2] . ' via Gdrive: ' . $fileName . PHP_EOL;
                $savedFiles[] = $fileName;

            } catch (\Exception $e) {
                echo '[ERROR] ' . $e->getMessage() . PHP_EOL;
            }
        }
    }
}

$em->flush();
