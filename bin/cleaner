#!/usr/bin/env php
<?php
/**
 * @author Alberto Maturano <alberto@maturano.mx>
 */

require 'cli-config.php';

use Mensa\Migration;
use Mensa\Clean;
use Mensa\Util\Cleaner;
use Doctrine\Common\Collections\Criteria;


$em->getClassMetaData('Mensa\Clean\Member')->setIdGenerator(new \Doctrine\ORM\Id\AssignedGenerator());


//-- Member --//
$migMembers = $em->getRepository('\Mensa\Migration\Member')->findAll();

echo 'Miembros por procesar: ' . count($migMembers) . PHP_EOL;
foreach ($migMembers as $migMember) {

    /** @var Migration\Member $migMember */
    $gender = ($migMember->getGender() !== 'FEMENINO')
            ? Cleaner::gender($migMember->getFirstName(), $migMember->getId())
            : $migMember->getGender();

    $member = (new Clean\Member())
        ->setId($migMember->getId())
        ->setFirstName($migMember->getFirstName())
        ->setLastName($migMember->getLastName())
        ->setGender($gender)
        ->setBirthdate(Cleaner::date($migMember->getBirthdate()))
        ->setEmail(Cleaner::email($migMember->getEmail()))
        ->setCreated(Cleaner::date($migMember->getCreated()))
        ->setAdmissionType($migMember->getAdmissionType())
    ;

    $em->persist($member);
}


//-- Address --//
$migAddresses = $em->getRepository('\Mensa\Migration\Address')->matching(
    Criteria::create()->orderBy(['id' => Criteria::ASC])
)->getIterator();

echo 'Direcciones por procesar: ' . count($migAddresses) . PHP_EOL;
foreach ($migAddresses as $migAddress) {
    $address = (new Clean\Address())
        /** @var Migration\Address $migAddress */
        ->setAddressLine1($migAddress->getAddressLine1())
        ->setAddressLine2($migAddress->getAddressLine2())
        ->setCity($migAddress->getCity())
        ->setColony($migAddress->getColony())
        ->setState($migAddress->getState())
        ->setPostalCode($migAddress->getPostalCode())
    ;

    $member = $em->find('Mensa\Clean\Member', $migAddress->getMember()->getId());

    $address->setMember($member);
    $member->setAddress($address);
    $em->persist($address);
    $em->persist($member);
}


//-- Memberships --//
$migMemberships = $em->getRepository('\Mensa\Migration\Membership')->findAll();

echo 'MembresÃ­as por procesar: ' . count($migMemberships) . PHP_EOL;
foreach ($migMemberships as $migMembership) {

    $membership = (new Clean\Membership())
        /** @var Migration\Membership $migMembership */
        ->setStart(Cleaner::date($migMembership->getStart()))
        ->setEnd(Cleaner::date($migMembership->getEnd()))
        ->setDelivery($migMembership->getDelivery())
        ->setCreated(\DateTime::createFromFormat('Y-m-d H:i:s', $migMembership->getCreated()))
    ;

    $member = $em->find('Mensa\Clean\Member', $migMembership->getMember()->getId());

    $membership->setMember($member);
    $em->persist($membership);
}

$em->flush();
